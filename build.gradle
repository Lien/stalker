apply plugin: "groovy"
apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'signing'

sourceCompatibility = JavaVersion.VERSION_1_7

group = "com.vandalsoftware.tools.gradle"

ext.release = has("release")
ext.sonatypeRepo = has("sonatypeRepo") ? sonatypeRepo : null
ext.sonatypeSnapshotRepo = has("sonatypeSnapshotRepo") ? sonatypeSnapshotRepo : null
ext.sonatypeUsername = has("sonatypeUsername") ? sonatypeUsername : null
ext.sonatypePassword = has("sonatypePassword") ? sonatypePassword : null

version = getVersion("0.3.0")

jar {
    baseName = "stalker"
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

task publishLocal(type: Upload) {
    configuration = configurations.default
    repositories {
        mavenDeployer {
            repository(url: mavenLocal().getUrl())
        }
    }
}

signing {
    if (project.ext.release) {
        sign configurations.archives
    }
}

uploadArchives {
    onlyIf {
        (project.ext.sonatypeRepo || project.ext.sonatypeSnapshotRepo) &&
                project.ext.sonatypePassword && project.ext.sonatypeUsername
    }
    repositories {
        mavenDeployer {
            configuration = configurations.archives
            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
            }
            def repo
            if (project.ext.release) {
                repo = project.ext.sonatypeRepo
            } else {
                repo = project.ext.sonatypeSnapshotRepo
            }
            repository(url: "$repo") {
                authentication(userName: project.ext.sonatypeUsername,
                        password: project.ext.sonatypePassword)
            }
            pom.artifactId = "stalker"
            pom.project {
                name 'Stalker'
                packaging 'jar'
                description 'Class analyzing Gradle plugin'
                url 'https://github.com/jonathanle/stalker'

                scm {
                    url 'scm:git@github.com:jonathanle/stalker.git'
                    connection 'scm:git@github.com:jonathanle/stalker.git'
                    developerConnection 'scm:git@github.com:jonathanle/stalker.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'jle'
                        name 'Jonathan Le'
                        email 'jonathanle@gmail.com'
                    }
                }
            }
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
}

def getVersion(String baseVersion) {
    if (project.ext.release) {
        return baseVersion
    }
    return baseVersion + '-SNAPSHOT'
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}

